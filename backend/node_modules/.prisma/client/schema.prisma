generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DIRECT_URL")
}

model User {
  id           String   @id @default(cuid())
  email        String   @unique
  passwordHash String
  name         String
  avatarUrl    String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  // Relations
  goals    Goal[]
  checkIns CheckIn[]
}

model Goal {
  id          String     @id @default(cuid())
  title       String
  description String?
  status      GoalStatus @default(IN_PROGRESS)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  timeline    String
  Progress    Int        @default(0)
  // Relations
  userId      String
  user        User       @relation(fields: [userId], references: [id])
  chunks      Chunk[]
  checkIn     CheckIn[]
}

model Chunk {
  id          String      @id @default(cuid())
  title       String
  description String?
  order       Int
  status      ChunkStatus @default(LOCKED)
  week        String?
  duration    String?
  difficulty  String?
  objectives  String[]
  skills      String[]

  // Relations
  goalId      String
  chatHistory ChatMessage[]
  goal        Goal          @relation(fields: [goalId], references: [id], onDelete: Cascade)
}

model ChatMessage {
  id        String     @id @default(cuid())
  content   String     @db.Text
  sender    SenderRole
  createdAt DateTime   @default(now())

  // Relation to the chunk
  chunkId String
  chunk   Chunk  @relation(fields: [chunkId], references: [id], onDelete: Cascade)
}

model CheckIn {
  id        String   @id @default(cuid())
  progress  Int
  mood      String?
  note      String?
  createdAt DateTime @default(now())

  // Relations
  userId String
  user   User   @relation(fields: [userId], references: [id])
  goalId String
  goal   Goal   @relation(fields: [goalId], references: [id])
}

enum GoalStatus {
  IN_PROGRESS
  COMPLETED
  ARCHIVED
}

enum ChunkStatus {
  LOCKED
  CURRENT
  COMPLETED
}

enum SenderRole {
  USER
  AI
}
